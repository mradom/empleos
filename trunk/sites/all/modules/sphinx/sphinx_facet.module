<?php

function sphinx_facet_menu() {
  if (!$may_cache) {
	$items[] = array(
      'path' => 'admin/settings/sphinx/facet',
      'title' => t('Facets'),
      'description' => t('Configure the Sphinx facets'),
      'callback' => 'drupal_get_form',
      'callback arguments' => array('sphinx_facet_administration'),
      'access' => user_access('administer sphinx search'),
      'type' => MENU_LOCAL_TASK,
      'weight' => 4,
    );
  }
  return $items;
}

function sphinx_facet_administration(){
  $options = array();
  for($n=1;$n<=20;$n++) { $options[$n] = $n;}
  $form['sphinx_facet']['no_facets'] = array(
    '#type' => 'select',
    '#title' => t('Number of facets'),
    '#default_value' =>  variable_get('sphinx_facet_number_of_facets', 5),
    '#description' => t(""),
    '#options' => $options,
  );
  return system_settings_form($form);


}
function sphinx_facet_administration_submit($form_id, $form_values){
  variable_set('sphinx_facet_number_of_facets', $form_values['no_facets']);
  drupal_set_message(t('Facet settings updated!'));
}

function sphinx_facet_block($op = 'list', $delta = 0, $edit = array()){
  if ($op == 'list') {
    $blocks['facet'] = array(
	  'info' => t('Sphinx - facets'),
      'weight' => 0, 
      'enabled' => 1, 
	  'region' => 'sidebar_wide'
	);
	return $blocks;
  }
  else if ($op == 'view') {
  	if($delta=='facet') {
  	  $index_path = arg(1);
  	  if(arg(0)=='search' && !empty($index_path)){
  	    $index = _sphinx_get_index_by_path(arg(1));
  	    $attributes = _sphinx_facet_get_attributes_by_iid($index);
  	    $facets = _sphinx_facet_build_facets($index, $attributes);
  	    return array('subject' => 'Facets', 'content' => $facets); 	
  	  }
  	}
  }
}

function _sphinx_facet_get_attributes_by_iid($index) {
  if (!empty($index)) {
    $res = db_query('SELECT aid, attribute_name, display_name, type FROM {sphinx_attributes} WHERE iid=%d && facet=1' , $index);
    $attributes = array();
    while($attr = db_fetch_object($res)) {
      $attributes[] = $attr;
    }
    return $attributes;
  }
}

function _sphinx_facet_build_facets($index, $attributes){
  //TODO: Don't display currently active filters
  
  $response = '';
  $url = explode('?', $_SERVER['REQUEST_URI']);
  $query = _sphinx_facet_build_query($index);
  $index_name = _sphinx_facet_get_index_name_by_id($index);
  $client = new SphinxClient();
  $connect = $client->_Connect();
  $display_names = array(); 
  if (!empty($_GET['as_filter'])) {
    $filter_codes = explode('-', $_GET['as_filter']);
    $filters = array();
    $active_filters = array();
    $filter_list = array();
    for($z=0; $z<count($filter_codes); $z++){
      $parts = explode('_',$filter_codes[$z]);
      
      if(!empty($parts[0]) && !empty($parts[1])) {
        $attribute = _sphinx_facet_get_attribute_data_by_aid($parts[0]);
        $filters[$attribute->attribute_name] = array($parts[1]);
        if($attribute->type == "term"){ 
          $term = taxonomy_get_term($parts[1]);
      	  $name = $term->name;
        }
        else if ($attribute->type == "user") {
      	  $u = user_load(array('uid' => $parts[1]));
      	  $name = $u->profile_navn;      
        }
       
        if(count($filter_codes)>2){
          $query_string = str_replace($filter_codes[$z].'-', '',$url[1]);
        } else {
          $query_string = str_replace('as_filter='.$filter_codes[$z].'-', '',$url[1]);
        }
        $filter_list[] = $attribute->display_name.': '.$name. ' ('.l('x', substr($url[0],1), null, $query_string).')';
      }
    }
    $response .= '<h2>'. t('Active filters') .'</h2>'. theme('item_list', $filter_list);
  }
  $limit = variable_get('sphinx_facet_number_of_facets', 5);
  for($n=0; $n<count($attributes); $n++) {
    if(is_array($filters)){
      foreach($filters as $attribute => $values){
        $client->SetFilter( $attribute, $values );
      }
    }
    $client->SetGroupBy($attributes[$n]->attribute_name,SPH_GROUPBY_ATTR, "@count desc");
    $client->SetMatchMode(SPH_MATCH_EXTENDED);
    $client->SetLimits(0,$limit);
    $client->AddQuery($query, $index_name);
    $display_names[$n]= $attributes[$n]->display_name;
  }
  $results = $client->RunQueries();
  for($n=0; $n<count($results); $n++) {
    if(count($results[$n]['matches'])) {
    $response .= '<h2>'.$display_names[$n].'</h2>';
    
    $lines = array();
    foreach($results[$n]['matches'] as $tid => $value) {
      
      if($attributes[$n]->type == "term"){ 
        $term = taxonomy_get_term($value['attrs']['@groupby']);
      	$link = $term->name;
      }
      else if ($attributes[$n]->type == "user") {
      	$u = user_load(array('uid' => $value['attrs']['@groupby']));
      	$link = $u->profile_navn;      
      }
      else if ($attributes[$n]->type == "node") {
      
      }
      if(empty($_GET['as_filter'])) {
        $qstring = 'as_filter='.$attributes[$n]->aid.'_'.$value['attrs']['@groupby'].'-'; 
        $query_string = (empty($url[1]))?$qstring:$url[1].'&'.$qstring;
      } else {
      	$pieces = explode('&',$url[1]);
      	for($x=0; $x<count($pieces); $x++) {
      	  $frag = explode('=', $pieces[$x]);
      	  //print_r($frag);
      	  if($frag[0]=='as_filter') {
      	    $pieces[$x] = $frag[0].'='.$frag[1].$attributes[$n]->aid.'_'.$value['attrs']['@groupby'].'-';   	    
      	  }   
        }
        $query_string = implode('&', $pieces);
      }
      
      $lines[] = l($link. ' ('.$value['attrs']['@count'].') ', substr($url[0],1), null, $query_string).' <br />';
    }
    
    $response .= theme('item_list', $lines);
    }
  }
  return $response;
  
}

function _sphinx_facet_build_query($index) {
 
  $fields = _sphinx_get_active_fields_by_iid($index);
  $needle = arg(2).' ';
  foreach ($fields as $fid => $name) {
    $term = $_GET['as_f'. $fid];
    if (!empty($term)) {
      $needle .= '@'. $name .' '. $term .' ';
    }
  }
  if (!empty($needle)) {
    return $needle; 
  }
  return;
}	

function _sphinx_facet_get_attribute_data_by_aid($aid = null) {
  if (!empty($aid)) {
    $res = db_query('SELECT * FROM {sphinx_attributes} WHERE aid=%d', $aid);
    $index = db_fetch_object($res);
    return $index;
  }
}
function _sphinx_facet_get_index_name_by_id($iid) {
  if (!empty($iid)) {
    $res = db_query('SELECT index_name FROM {sphinx_indexes} WHERE iid="%d"', $iid);
    $index = db_fetch_object($res);
    return $index->index_name;
  }
}